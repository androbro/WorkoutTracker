generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Exercise {
  id                Int               @id @default(autoincrement())
  name              String
  description       String?
  primaryMuscle     MuscleType        @relation("PrimaryMuscle", fields: [primaryMuscleId], references: [id])
  primaryMuscleId   Int
  secondaryMuscle   MuscleType?       @relation("SecondaryMuscle", fields: [secondaryMuscleId], references: [id])
  secondaryMuscleId Int?
  equipment         WorkoutEquipment  @relation(fields: [equipmentId], references: [id])
  equipmentId       Int
  difficulty        String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  WorkoutExercise   WorkoutExercise[]
}

model MuscleType {
  id                 Int        @id @default(autoincrement())
  name               String     @unique
  primaryExercises   Exercise[] @relation("PrimaryMuscle")
  secondaryExercises Exercise[] @relation("SecondaryMuscle")
}

model WorkoutEquipment {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  exercises Exercise[]
}

model Workout {
  id              Int               @id @default(autoincrement())
  name            String
  description     String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  WorkoutExercise WorkoutExercise[]
}

model WorkoutExercise {
  id                Int      @id @default(autoincrement())
  workout           Workout  @relation(fields: [workoutId], references: [id])
  workoutId         Int
  exercise          Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId        Int
  order             Int
  sets              Int
  reps              Int
  minutesToComplete Int
  restBetweenSets   Int
  notes             String?
}
